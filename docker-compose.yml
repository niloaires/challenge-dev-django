version: "3.8"

services:
  rabbitmq:
    container_name: rabbitmq_container
    image: rabbitmq:3.9
    networks:
      digital_sys_rede:
    hostname: "rabbitmq"
    environment:
        - RABBITMQ_DEFAULT_USER=guest
        - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - "5672:5672"
      - "15672:15672"

  api:
    container_name: api_container
    build:
        context: .
        dockerfile: Dockerfile
    env_file:
      - .env
    networks:
      digital_sys_rede:
    ports:
      - "8000:8000"
    hostname: api
    volumes:
      - app-volume:/app
    depends_on:
      - rabbitmq
    restart: on-failure

  celery:
    container_name: celery_container
    restart: on-failure
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
      - api
    networks:
      digital_sys_rede:
    volumes:
      - app-volume:/app
    command: celery -A propostas worker --beat -l info
  frontend:
    container_name: frontend_container
    build:
        context: frontend
        dockerfile: Dockerfile
    env_file:
      - .env
    networks:
      digital_sys_rede:
    ports:
      - "3000:3000"
    stdin_open: true
    hostname: frontend
    depends_on:
      rabbitmq:
        condition: service_started
      api:
        condition: service_started
    volumes:
      - app-volume-frontend:/app/frontend
networks:
    digital_sys_rede:
      driver: bridge
volumes:
  app-volume:
  app-volume-frontend:




